{
  "name": "emit-function",
  "version": "0.0.2",
  "description": "because i get tired of typing EE.prototype.emit.bind.bind(EE.prototype.emit)",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/emit-function.git"
  },
  "keywords": [
    "emit",
    "function"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~0.2.2"
  },
  "readme": "# emit-function\n\nbecause I hate having to import `EventEmitter` and\ncall `EventEmitter.prototype.emit.bind.bind(EventEmitter.prototype.emit)`.\n\n```javascript\n\nvar EE = require('events').EventEmitter\n  , emit = require('emit-function')\n\nvar ee_1 = new EE\n  , ee_2 = new EE\n\nee_1.on('data', emit(ee_2, 'data'))\n\n```\n\n## api\n\n#### emit(eventemitter, eventName[, curryArg1...curryArgN]) -> function\n\nCreates a function that, when called, calls `emit` on `eventemitter`\nwith `eventName`. Curried args are placed at the front, args added by\ncalling the function are added after the curried args. Allows easy\nforwarding of events from emitter to emitter.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "emit-function@0.0.2",
  "dist": {
    "shasum": "e3a50b3d61be1bf8ca88b924bf713157a5bec124",
    "tarball": "http://registry.npmjs.org/emit-function/-/emit-function-0.0.2.tgz"
  },
  "_npmVersion": "1.1.69",
  "_npmUser": {
    "name": "chrisdickinson",
    "email": "chris@neversaw.us"
  },
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "directories": {},
  "_shasum": "e3a50b3d61be1bf8ca88b924bf713157a5bec124",
  "_resolved": "https://registry.npmjs.org/emit-function/-/emit-function-0.0.2.tgz",
  "_from": "emit-function@0.0.2"
}
