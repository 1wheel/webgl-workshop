{
  "name": "@exercise/buffer-draw",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {},
  "scripts": {
    "start": "node server.js"
  },
  "readme": "# Exercise\n\nFor this exercise, a buffer and shader has been prepared for you and all attribute values have been set.  You should use the draw arrays command to draw the following primitives in this order:\n\n1. A line loop with 32 vertices starting at vertex 99\n1. A triangle fan with 5 vertices starting at vertex 131\n1. 32 lines starting from vertex 35\n1. 32 points starting from vertex 3\n1. A single triangle starting from vertex 0\n\n# Basic Drawing\n\nOnce we have a buffer and shader set up, along with all the associated attribute pointers, we can finally start drawing stuff.  This is done using the `gl.drawArrays` command.  Here is an example of what a call to drawArrays looks like:\n\n```javascript\ngl.drawArrays(gl.TRIANGLES, 0, 12)\n```\n\nThe interface for this function is as follows:\n\n## `gl.drawArrays(type, offset, count)`\n* `type` is the type of primitive to draw\n* `offset` is the starting vertex to draw from\n* `count` is the number of **vertices** to draw\n\nThe possible values for `type` are as follows:\n\n* `gl.TRIANGLES` draws a list of triangles.  Note that `count` must be a multiple of 3 for this to work\n* `gl.LINES` draws a list of line segments.  `count` must be a multiple of `2`\n* `gl.POINTS` draws a list of points.\n* `gl.LINE_STRIP` draws a connected polyline between each subsequent vertex\n* `gl.LINE_LOOP` like `gl.LINE_STRIP`, except the first and last vertices are connected\n* `gl.TRIANGLE_FAN` keeping the first vertex fixed, draws a triangle for each subsequent edge in the sequence of vertices\n* `gl.TRIANGLE_STRIP` draws a triangle for every 3 consecutive vertices in the list\n",
  "readmeFilename": "README.md",
  "description": "For this exercise, a buffer and shader has been prepared for you and all attribute values have been set.  You should use the draw arrays command to draw the following primitives in this order:",
  "_id": "@exercise/buffer-draw@1.0.0",
  "_shasum": "13c6c84887451fc64f1bb55094f78fe0f548fa8f",
  "_from": "exercises/buffer-draw",
  "_resolved": "file:exercises/buffer-draw"
}
