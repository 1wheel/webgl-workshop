{
  "name": "memoize-sync",
  "version": "0.0.2",
  "description": "Return a memoized version of function.",
  "main": "index.js",
  "scripts": {
    "test": "fox"
  },
  "devDependencies": {
    "fox": "*"
  },
  "repository": {
    "url": "git@github.com:azer/memoize-sync.git",
    "type": "git"
  },
  "author": {
    "name": "Azer KoÃ§ulu",
    "email": "azer@kodfabrik.com"
  },
  "license": "BSD",
  "dependencies": {
    "strip": "0.0.0"
  },
  "readme": "## memoize-sync\n\nReturns a memoized version of a function.\n\n### Install\n\n```bash\n$ npm install memoize-sync\n```\n\n### Usage\n\n```js\nfunction work(n){\n    console.log(\"doing some work\")\n    return n + 10\n}\n\nvar memoizedWork = memoize(myfunc)\n\nmemoizedWork(10)\n// \"doing some work\"\n// => 20\n\nmemoizedWork(10)\n// => 20\n\nmemoizedWork(20);\n// \"doing some work\"\n// => 30\n\nmemoizedWork(20);\n// => 30\n\n```\n\n#### Using Hasher\n\n```js\nvar memoizedWork = memoize(work, hasher)\n\nmemoizedWork('hello', 'world')\n// doing some work\n\nmemoizedWork('hello', 'world')\n// => hello world\n\nmemoizedWork('hello', 'kitty')\n// doing some work\n// => hello kitty\n\nmemoizedWork('hello', 'kitty')\n// => hello kitty\n\nfunction hasher(first, last){\n    return first + ', ' + last\n}\n\nfunction work(first, last){\n    console.log('doing some work')\n\n    return first + ', ' + last\n}\n```\n\n![](http://distilleryimage2.s3.amazonaws.com/3e14d1ae8e4711e2af7822000a1fb04e_6.jpg)\n",
  "_id": "memoize-sync@0.0.2",
  "dist": {
    "shasum": "0b8f80f2aaf673014b586f5e30a26728ef27c4b5",
    "tarball": "http://registry.npmjs.org/memoize-sync/-/memoize-sync-0.0.2.tgz"
  },
  "maintainers": [
    {
      "name": "azer",
      "email": "azer@kodfabrik.com"
    }
  ],
  "directories": {},
  "_shasum": "0b8f80f2aaf673014b586f5e30a26728ef27c4b5",
  "_resolved": "https://registry.npmjs.org/memoize-sync/-/memoize-sync-0.0.2.tgz",
  "_from": "memoize-sync@0.0.2"
}
