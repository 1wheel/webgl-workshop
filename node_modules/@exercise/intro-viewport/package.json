{
  "name": "@exercise/intro-viewport",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {},
  "scripts": {
    "start": "node server.js"
  },
  "readme": "# Exercise\n\nCurrently your submission is rendering a bunny that is stretched out across\nthe entire canvas. Change it to match the example above: we want two bunnies,\none each covering one half of the screen.\n\n# `gl.viewport`\n\nBy default, WebGL doesn't always draw within the full bounds of the canvas: you\nneed to manually set the **viewport** to tell WebGL what parts of the screen to\ndraw to.\n\nThis is useful in cases where you might want to draw the scene to a portion\nof the canvas, for example in split-screen games.\n\nFor example, if you wanted to draw your scene within a 512Ã—512 square, you\nwould use the following before you call any drawing functions:\n\n``` javascript\nvar top = 0\nvar left = 0\nvar width = 512\nvar height = 512\n\ngl.viewport(left, top, width, height)\n```\n\nMost of the time, you want to draw to fill the entire screen. You can do that\nlike so:\n\n``` javascript\ngl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n```\n",
  "readmeFilename": "README.md",
  "description": "Currently your submission is rendering a bunny that is stretched out across the entire canvas. Change it to match the example above: we want two bunnies, one each covering one half of the screen.",
  "_id": "@exercise/intro-viewport@1.0.0",
  "_shasum": "f9fadb7fd594436b2ef5d23e68942e6a4383da00",
  "_from": "exercises/intro-viewport",
  "_resolved": "file:exercises/intro-viewport"
}
