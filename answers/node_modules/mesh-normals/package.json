{
  "name": "mesh-normals",
  "version": "1.0.0",
  "description": "Given a list of vertices and faces, generate the normals for a triangle mesh.",
  "main": "index.js",
  "scripts": {
    "start": "beefy demo.js:bundle.js -- -t brfs",
    "prepublish": "browserify demo.js -t brfs > bundle.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/mesh-normals.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "devDependencies": {
    "perlin": "~1.0.0",
    "gl-vao": "0.0.2",
    "game-shell-orbit-camera": "0.0.0",
    "zeros": "0.0.0",
    "gl-buffer": "~0.1.1",
    "gl-matrix": "~2.0.0",
    "gl-now": "0.0.4",
    "gl-shader": "0.0.6",
    "ndarray-fill": "~0.1.0",
    "beefy": "~0.4.1",
    "brfs": "0.0.7",
    "browserify": "~2.29.1",
    "heightmap-mesher": "0.0.0",
    "bunny": "~1.0.1"
  },
  "keywords": [
    "3D",
    "mesh",
    "normal",
    "face",
    "vertex",
    "poly",
    "vectors",
    "geometry",
    "generation"
  ],
  "dependencies": {
    "unindex-mesh": "0.0.0",
    "face-normals": "0.0.0",
    "normals": "~0.1.0"
  },
  "readme": "# mesh-normals [![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nGiven a list of vertices and faces, generate the normals for a triangle mesh.\n\nGeared more towards \"soft\" low-poly normals, as you can't use indexed draw\ncalls with the resulting normals. If you're just planning on straight smooth\nvertex normals, use the [normals](http://github.com/mikolalysenko/normals)\nmodule. If you want low-poly and only have a \"triangle soup\" mesh,\n[face-normals](http://github.com/hughsk/face-normals) will still work for you.\n\n[view demo](http://hughsk.github.io/mesh-normals)\n\n## Installation ##\n\n[![mesh-normals](https://nodei.co/npm/mesh-normals.png?mini=true)](https://nodei.co/npm/mesh-normals)\n\n## Usage ##\n\n### `normals(cells, positions, flatness, [output])` ###\n\n`cells` is an indexed list of faces. Each face should be three elements long,\none element per point.\n\n`positions` is a list of vertex positions.\n\n`flatness` is a value between 0 and 1, where 0 will return results only from\nthe vertex normals and 1 will return results only from the face normals. 0.5\nwill be the middle ground between them.\n\nOptionally, you can pass in an array-like `output` object to set the values\ndirectly. If not, a `Float32Array` will be created for you - either way, the\nnew/updated array will be returned.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hughsk/mesh-normals/issues"
  },
  "_id": "mesh-normals@1.0.0",
  "dist": {
    "shasum": "dd3dc688a74e937ca4aa14c22c28909d340ef16e",
    "tarball": "http://registry.npmjs.org/mesh-normals/-/mesh-normals-1.0.0.tgz"
  },
  "_from": "mesh-normals@>=1.0.0 <2.0.0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "hughsk",
    "email": "hughskennedy@gmail.com"
  },
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "dd3dc688a74e937ca4aa14c22c28909d340ef16e",
  "_resolved": "https://registry.npmjs.org/mesh-normals/-/mesh-normals-1.0.0.tgz"
}
