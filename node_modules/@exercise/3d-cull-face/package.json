{
  "name": "@exercise/3d-cull-face",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {},
  "scripts": {
    "start": "node server.js"
  },
  "readme": "## Exercise\n\nFor this exercise, you should render the model with all front faces culled.\n\n## Face culling\n\nWebGL supports selectively rendering either the front or back faces of a triangle through a feature called *face culling*.  This can be used for optimization purposes (by reducing the total number of fragments which must be processed) or for certain rendering effects like transparency and shadows.\n\nTo turn on face culling, we call:\n\n```javascript\ngl.enable(gl.CULL_FACE)\n```\n\nAnd you can turn it off with the command:\n\n```javascript\ngl.disable(gl.CULL_FACE)\n```\n\nOnce you have face culling turned on, you can tell WebGL which faces to cull using the `gl.cullFace` command.  For example, to disable rendering backwards facing triangles you can use:\n\n```javascript\ngl.cullFace(gl.BACK)\n```\n\nPossible arguments for this function are:\n\n* `gl.FRONT` - cull front facing triangles\n* `gl.BACK` - cull back facing triangles\n* `gl.FRONT_AND_BACK` - cull both front and back facing triangles",
  "readmeFilename": "README.md",
  "description": "For this exercise, you should render the model with all front faces culled.",
  "_id": "@exercise/3d-cull-face@1.0.0",
  "_shasum": "23155e1f78ad8619fd9d399327fbfdb2a12d7a6f",
  "_from": "exercises/3d-cull-face",
  "_resolved": "file:exercises/3d-cull-face"
}
