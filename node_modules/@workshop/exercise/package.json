{
  "name": "@workshop/exercise",
  "version": "1.0.0",
  "dependencies": {},
  "readme": "# @workshop/exercise\n\nCommon exercise operations. Feel free to extend!\n\n## Usage\n\nCreate an exercise instance like so:\n\n``` javascript\nvar exercise = require('@workshop/exercise')(require('./package.json').name)\n```\n\n## API\n\n### exercise.passed\n\nWill be true if the student has passed this exercise, otherwise false.\n\n### exercise.attempt(success)\n\nTo be called with `success` being either `true` or `false`. The following are\nmostly equivalent:\n\n``` javascript\nexercise.passed = true\nexercise.attempt(true)\n```\n\nHowever `.attempt` will not \"unpass\" a lesson, and as such it's recommended to\nchange it this way instead of using `exercise.passed` unless you explicitly want\nto revert the lesson state.\n\n### exercise.on('attempt', fn(success))\n\nEmitted when `exercise.attempt` is called.\n",
  "readmeFilename": "README.md",
  "description": "Common exercise operations. Feel free to extend!",
  "_id": "@workshop/exercise@1.0.0",
  "scripts": {},
  "_shasum": "37376a34e99e2a2c91b96ec48047c636f205b7d5",
  "_from": "workshop/exercise",
  "_resolved": "file:workshop/exercise"
}
