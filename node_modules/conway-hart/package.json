{
  "name": "conway-hart",
  "version": "0.1.0",
  "description": "CommonJS port of George Hart's polyhedral notation library",
  "main": "index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "jquery-browserify": "~1.8.1",
    "gl-shells": "~0.0.10"
  },
  "scripts": {
    "test": "node test/seed.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/conway-hart.git"
  },
  "keywords": [
    "conway",
    "hart",
    "polyhedra",
    "polytope",
    "subdivision",
    "icosahedron",
    "dodecahedron",
    "cube",
    "tetrahedron",
    "polyhedron",
    "mesh",
    "triangle",
    "surface",
    "3d",
    "webgl"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "GPL",
  "readmeFilename": "README.md",
  "gitHead": "3077681bc91ec35ae72e65922cfa5da9f6448aee",
  "readme": "conway-hart\n===========\nA port of [George Hart's JavaScript implementation/extension of Conway's polyhedral notation](http://www.georgehart.com/virtual-polyhedra/conway_notation.html) to the CommonJS module system.  Here are some useful links that can help explain what it all means:\n\n* George Hart's original implementation:  http://www.georgehart.com/virtual-polyhedra/conway_notation.html\n* [The Wikipedia page on Conway's notation](http://en.wikipedia.org/wiki/Conway_polyhedron_notation)\n\nInstallation\n============\nJust use npm:\n\n    npm install conway-hart\n    \nExample\n=======\nHere is an example showing how to use this library to generate a shape:\n\n    require(\"conway-hart\")(\"djmeD\");\n\nWhich produces the following polygon:\n\n<img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/splash.png\" width=\"40%\" style=\"margin-left=auto; margin-right=auto;\" />\n\nIf you want to try it out for yourself without installing node.js, [here is an interactive WebGL demo.](http://mikolalysenko.github.com/conway-hart/example/www/index.html)\n\nUsage\n=====\nConway/Hart notation is a way of specifying spherical polyhedra by subdividing regular polyhedra.  The way it works is that you first specify a **seed** polyhedra, and then apply a sequence of **operators**.  At the end, it returns a JavaScript object with 3 fields:\n\n* `name`: The name of the solid.\n* `cells`: The faces of the solid, represented as a list of indices into the vertices.\n* `positions`: The positions of the vertices of the solid.\n\nIf there is an error parsing the input, an exception is thrown.\n\nSeeds\n-----\nHere is a list of all the available seeds.  The ones with an `n` next to their symbol take an extra parameter describing how many faces are on their base.\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/T.png\" width=\"10%\" /> `\"T\"` Tetrahedron\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/C.png\" width=\"10%\" /> `\"C\"` Cube\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/O.png\" width=\"10%\" /> `\"O\"` Octahedron\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/D.png\" width=\"10%\" /> `\"D\"` Dodecahedron\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/I.png\" width=\"10%\" /> `\"I\"` Icosahedron\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/P.png\" width=\"10%\" /> `\"Pn\"` Prism\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/A.png\" width=\"10%\" /> `\"An\"` Antiprism\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/Y.png\" width=\"10%\" /> `\"Yn\"` Pyramid\n\nOperations\n----------\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/a_.png\" width=\"10%\" /> `a` Ambo\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/b.png\" width=\"10%\" />`b` Bevel\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/c_.png\" width=\"10%\" /> `c` Canonicalize\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/d_.png\" width=\"10%\" /> `d` Dual\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/e.png\" width=\"10%\" /> `e` Expand\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/g.png\" width=\"10%\" /> `g` Gyro\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/j.png\" width=\"10%\" /> `j` Join\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/k.png\" width=\"10%\" /> `kn` Kis\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/m.png\" width=\"10%\" /> `m` Meta\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/o_.png\" width=\"10%\" /> `o` Ortho\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/p_.png\" width=\"10%\" /> `p` Propellor\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/r.png\" width=\"10%\" /> `r` Reflect\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/s.png\" width=\"10%\" /> `s` Split\n\n### <img src=\"https://raw.github.com/mikolalysenko/conway-hart/master/images/t_.png\" width=\"10%\" /> `tn` Truncate\n\nCredits\n=======\n(c) 1998 George Hart. GPL\n\nCommonJS port maintained by Mikola Lysenko.\n",
  "_id": "conway-hart@0.1.0",
  "dist": {
    "shasum": "fe120413562b05afaa2cfcb76538e56f21aede42",
    "tarball": "http://registry.npmjs.org/conway-hart/-/conway-hart-0.1.0.tgz"
  },
  "_from": "conway-hart@>=0.1.0 <0.2.0",
  "_npmVersion": "1.2.3",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "_shasum": "fe120413562b05afaa2cfcb76538e56f21aede42",
  "_resolved": "https://registry.npmjs.org/conway-hart/-/conway-hart-0.1.0.tgz"
}
